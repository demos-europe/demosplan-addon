<?php

declare(strict_types=1);

namespace DemosEurope\DemosplanAddon\ResourceConfigBuilder;

use DemosEurope\DemosplanAddon\Contracts\Entities\CountyInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\DraftStatementInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\ElementsInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\GdprConsentInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\MunicipalityInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\OrgaInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\OriginalStatementAnonymizationInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\ParagraphVersionInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\PlaceInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\PriorityAreaInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\ProcedureInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\SegmentCommentInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\SegmentInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\SingleDocumentVersionInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementAttachmentInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementAttributeInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementFragmentInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementLikeInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementMetaInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementVersionFieldInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\StatementVoteInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\TagInterface;
use DemosEurope\DemosplanAddon\Contracts\Entities\UserInterface;
use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToManyRelationshipConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface>
 *
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $parentStatementOfSegment
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,SegmentCommentInterface> $comments
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $orderInProcedure
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,PlaceInterface> $place
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $parent
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $children
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $original
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $statementsCreatedFromOriginal
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $priority
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $externId
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $internId
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,UserInterface> $user
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,OrgaInterface> $organisation
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,ProcedureInterface> $procedure
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $represents
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $representationCheck
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $phase
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $status
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $created
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $modified
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $send
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $sentAssessmentDate
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $submit
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $deletedDate
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $deleted
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $negativeStatement
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $sentAssessment
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $publicUseName
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $publicVerified
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,OriginalStatementAnonymizationInterface> $anonymizations
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $publicStatement
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $toSendPerMail
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $title
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $text
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $recommendation
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $memo
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $feedback
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $reasonParagraph
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $planningDocument
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $file
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $mapFile
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $countyNotified
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,ParagraphVersionInterface> $paragraph
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,SingleDocumentVersionInterface> $document
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,ElementsInterface> $element
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $polygon
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,DraftStatementInterface> $draftStatement
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementMetaInterface> $meta
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementVersionFieldInterface> $version
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementAttributeInterface> $statementAttributes
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementVoteInterface> $votes
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $numberOfAnonymVotes
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementLikeInterface> $likes
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,TagInterface> $tags
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,CountyInterface> $counties
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,PriorityAreaInterface> $priorityAreas
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,MunicipalityInterface> $municipalities
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementFragmentInterface> $fragments
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $voteStk
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $votePla
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,GdprConsentInterface> $gdprConsent
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $submitType
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,UserInterface> $assignee
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $headStatement
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $cluster
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $manual
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $clusterStatement
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $placeholderStatement
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementInterface> $movedStatement
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $name
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $replied
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentInterface> $draftsListJson
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,SegmentInterface> $segmentsOfStatement
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentInterface,StatementAttachmentInterface> $attachments
 */
class BaseSegmentResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
